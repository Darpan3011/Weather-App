import Head from 'next/head';
import Image from 'next/image';
import axios from 'axios';
import { useState } from 'react';
import { BsSearch } from 'react-icons/bs';
import Weather from '../components/Weather';
import Spinner from '../public/spinner.gif';
import background from '../public/bg.jpg';

export default function Home() {
  const [city, setCity] = useState('');
  const [zipCode, setZipCode] = useState('');
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;
  const zipUrl = `https://api.openweathermap.org/data/2.5/weather?zip=${zipCode},IN&units=metric&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const fetchWeatherByCity = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      const response = await axios.get(url);
      const windSpeedKmh = response.data.wind.speed * 1.60934; // Convert mph to km/h
      const weatherData = { ...response.data, wind_speed_kmh: windSpeedKmh };
      setWeather(weatherData);
    } catch (error) {
      alert('Unable to find weather information for city.');
    }
    setCity('');
    setLoading(false);
  };

  const fetchWeatherByZip = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      const response = await axios.get(zipUrl);
      const windSpeedKmh = response.data.wind.speed * 1.60934; // Convert mph to km/h
      const weatherData = { ...response.data, wind_speed_kmh: windSpeedKmh };
      setWeather(weatherData);
    } catch (error) {
      alert('Unable to find weather information for ZIP code.');
    }
    setZipCode('');
    setLoading(false);
  };

  const handleZipCodeChange = (e) => {
    const value = e.target.value.replace(/[^\d]/g, '');
    setZipCode(value);
  };

  return (
    <div>
      <Head>
        <title>Darpan | Weather App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/weather2.png' />
      </Head>
      {/* Overlay */}
      <div className='absolute top-0 left-0 right-0 bottom-0 bg-black/40 z-[1]' />
      {/* Background image */}
      <Image
        src={background}
        layout='fill'
        className='object-cover'
        alt='background'
      />

      {/* City Search */}
      <div className='flex md:flex-row flex-col'>
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 px-4 text-white z-10'>
          <form
            onSubmit={fetchWeatherByCity}
            className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'
          >
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className='bg-transparent border-none text-white focus:outline-none text-2xl'
                type='text'
                placeholder='Search city'
              />
            </div>
            <button onClick={fetchWeatherByCity}>
              <BsSearch size={20} />
            </button>
          </form>
        </div>

        {/* ZIP Code Search */}
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 px-4 text-white z-10'>
          <form
            onSubmit={fetchWeatherByZip}
            className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'
          >
            <div>
              <input
                onChange={handleZipCodeChange}
                value={zipCode}
                className='bg-transparent border-none text-white focus:outline-none text-2xl'
                type='text'
                placeholder='Enter ZIP code'
              />
            </div>
            <button onClick={fetchWeatherByZip}>
              <BsSearch size={20} />
            </button>
          </form>
        </div>
      </div>

      {loading &&
        <div className='flex items-center justify-center w-full'>
          <Image
            src={Spinner}
            alt='loading..'
            layout='fixed'
            width={100}
            height={100}
            className='block'
          /></div>}

      {/* Weather */}
      {!loading && weather.main && <Weather data={weather} />}
    </div>
  );
}
